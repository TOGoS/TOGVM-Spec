{
	"http://ns.nuke24.net/TOGVM/Expressions/LiteralString": {
		"properties": {
			"literalValue": {}
		}
	},
	"http://ns.nuke24.net/TOGVM/Expressions/LiteralInteger": {
		"properties": {
			"literalValue": {}
		}
	},
	"http://ns.nuke24.net/TOGVM/Expressions/LiteralNumber": {
		"properties": {
			"literalValue": {}
		}
	},
	"http://ns.nuke24.net/TOGVM/Expressions/LiteralBoolean": {
		"properties": {
			"literalValue": {}
		}
	},
	"http://ns.nuke24.net/TOGVM/Expressions/Variable": {
		"properties": {
			"variableName": {
				"notes": ["Some string identifying the variable"]
			}
		},
		"notes": [
			"Evaluates to the value of a variable.",
			"Resolution semantics depend on the variable's scope."
		]
	},
	"http://ns.nuke24.net/TOGVM/Expressions/Let": {
		"properties": {
			"variableValueExpressions": {
				"notes": [
					"A map of variable name => initialization expression"
				]
			},
			"body": {
				"notes": [
					"An expression to evaluate in the context of the new variables."
				]
			}
		},
		"notes": [
			"Binds values to variables and then evaluates body.",
			"Each variable value expression is evaluated exactly once."
		]
	},
	"http://ns.nuke24.net/TOGVM/Expressions/FunctionApplication": {
		"properties": {
			"functionExpression": {
				"notes": ["An expression returning the function!"]
			},
			"functionRef": {
				"notes": [
					"Identifies a function by URI/long name, usually for an intrinsic functions.",
					"Can be used in place of functionExpression"
				]
			},
			"arguments": {
				"notes": [
					"A list of argument expressions which will each evaluate to the corresponding argument value.",
					"NamedArgument and Splat expressions have special meaning as function arguments."
				]
			}
		},
		"notes": [
			"Also acts as [multidimensional] array indexing operator!"
		]
	},
	"http://ns.nuke24.net/TOGVM/Expressions/ArrayConstruction": {
		"properties": {
			"valueExpressions": {
				"notes": [
					"An array of expressions which will each evaluate to the corresponding array element value."
				]
			}
		}
	},
	"http://ns.nuke24.net/TOGVM/Expressions/AssociativeArrayConstruction": {
		"properties": {
			"pairExpressions": {
				"notes": [
					"An array of alternating key/value expressions and/or Splat expressions.",
					"It does not make sense to use a splat expression following a key."
				]
			}
		}
	},
	"http://ns.nuke24.net/TOGVM/Expressions/Splat": {
		"properties": {
			"splattedValueExpression": {
				"notes": [ "The expression whose value is to be interpolated" ]
			}
		},
		"notes": [
			"Only makes sense as an expression in a list constructor or function arguments.",
			"Indicates that each element of the returned list should be its own entry in the resulting list.",
			"Associatve arrays may be splatted when appropriate."
		]
	},
	"http://ns.nuke24.net/TOGVM/Expressions/NamedArgument": {
		"properties": {
			"name": {
				 "notes": [ "The argument name" ]
			},
			"nameExpression": {
				 "notes": [ "An expression that provides the argument name" ]
			},
			"valueExpression": {
				"notes": [ "An expression that provides the argument value" ]
			}
		},
		"notes": [
			"Only valid as a function argument.",
			"Either 'name' or 'nameExpression' must be specified."
		]
	},
	"http://ns.nuke24.net/TOGVM/Expressions/IfElseChain": {
		"properties": {
			"arguments": {
				"notes": ["A list of alternating condition/result expressions, followed by a final 'otherwise' result expression"]
			}
		}
	}
}
